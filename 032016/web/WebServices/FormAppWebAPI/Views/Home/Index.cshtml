@*<div class="jumbotron">
    <h1>ASP.NET</h1>
    <p class="lead">ASP.NET is a free web framework for building great Web sites and Web applications using HTML, CSS, and JavaScript.</p>
    <p><a href="http://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>ASP.NET Web API is a framework that makes it easy to build HTTP services that reach
        a broad range of clients, including browsers and mobile devices. ASP.NET Web API
        is an ideal platform for building RESTful applications on the .NET Framework.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301870">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301871">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301872">Learn more &raquo;</a></p>
    </div>
</div>*@

@section Scripts {
    <script type="text/javascript">

    // Override the submit handler for Form1, to submit using AJAX.
     $("#form1").submit(function () {

        // This example shows how to send a complex CLR type as HTML form data.
        var jqxhr = $.post('api/updates/complex', $('#form1').serialize())
            .success(function () {
                var loc = jqxhr.getResponseHeader('Location');
                var a = $('<a/>', { href: loc, text: loc });
                $('#message').html(a);
            })
            .error(function () {
                $('#message').html("Error posting the update.");
            });
        return false;
    });

    // Do the same thing for Form2
    $('#form2').submit(function () {

        // This example shows how to send a simple data type as HTML form data.
        var jqxhr = $.post('api/updates/simple', { "": $('#status1').val() })
            .success(function () {
                var loc = jqxhr.getResponseHeader('Location');
                var a = $('<a/>', { href: loc, text: loc });
                $('#message').html(a);
            })
            .error(function () {
                $('#message').html("Error posting the update.");
            });
        return false;
    });
    </script>
}

<header>
    <div class="content-wrapper">
        <div class="float-left">
            <p class="site-title">
                <a href="~/">ASP.NET Web API</a>
            </p>
        </div>
    </div>
</header>
<div id="body">
    <section class="content-wrapper main-content clear-fix">

        <h1>Complex Type</h1>
        <form id="form1" method="post" action="api/updates/complex"
              enctype="application/x-www-form-urlencoded">
            <div>
                <label for="status">Status</label>
            </div>
            <div>
                <input name="status" type="text" />
            </div>

            <div>
                <label for="date">Date</label>
            </div>
            <div>
                <input name="date" type="text" />
            </div>

            <div>
                <input type="submit" value="Submit" />
            </div>
        </form>

        <h1>Simple Type</h1>
        <form id="form2">
            <div>
                <label for="status">Status</label>
            </div>
            <div>
                <input id="status1" type="text" />
            </div>
            <div>
                <input type="submit" value="Submit" />
            </div>
        </form>

        <h3 id="message" />
    </section>
</div>
